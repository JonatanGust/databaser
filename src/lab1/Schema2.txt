Grupp 46
Therese Sturesson & Jonatan Gustafsson

Now we make new tables out of/from our FD;s and see that  3 through 7 is the same table, just using different "naming" of the key which probably indicates that
there are quite a few references to this table. Same goes for 8-10, 11-12 and 13-14. Every table also contains "country" and as country ->> *everything* we can be
sure that country is an "ultra" key. The language never comes into play so we perhaps need to add a table to store who knows what language. Same goes for the cities
and towns which exists in the domain description. If we then compose tables from this data, excluding things we don't get from FD;s we get:
R1:
  _name_ (of a country)

R2:
  _name_ (of a language)

R3:
  _country_ (of an area), _name_ (of an area), population
  References:
    country -> R1.name

R4:
  _personnumber_, _country_ (of a person), name (of a person), budget,  location_country (of a person), location_area (of a person)
  References:
    country -> R1.name
    (location_area, location_country) -> R3.(name, country)

R5:
  THIS:
    _roadID_, tax, pointA_area, pointA_country, pointB_area, pointB_country, personnumber_owner (of a road), country_owner (of a road)
  OR:
    _pointA_area_, _pointA_country_, _pointB_area_, _pointB_country_, _personnumber_owner_ (of a road), _country_owner_ (of a road), roadID, tax
  References:
    (pointA_area, pointA_country) -> R3.(name, country)
    (pointB_area, pointB_country) -> R3.(name, country)
    (personnumber_owner, country_owner) -> R4.(personnumber, country)

R6:
  THIS:
    _hotelID_, price, name (of an hotel), location_country (of an hotel), location_area (of an hotel), personnumber_owner (of an hotel), country_owner (of an hotel)
  OR:
    _location_country_ (of an hotel), _location_area_ (of an hotel), _personnumber_owner_ (of an hotel), _country_owner_ (of an hotel), hotelID, price, name (of an hotel)
  References:
    (location_country, location_area) -> R3.(country, name)
    (personnumber_owner, country_owner) -> R4.(personnumber, country)
R':
  <Nothing left>
Now this does tell us that perhaps having hotel and road ID;s might not be the best way, we could instead just use almost every other attribute as keys. We also haven't
solved the problem of towns, cities and languages spoken, but an FD analysis doesn't cover everything so that's okay. We choose to keep the roadID as the owner of a hotel
isn't required to exist. For hotels there has to be an owner so here we scrap the ID.

Schema:

Language(_Name_)
Country(_Name_)

Area(_Name_,Population,_Country_)
	Country -> Country.Name

Town(_Name_,_Country_)
	(Name, Country) -> Area.(Name,Country)

City(_Name_,_Country_)
	(Name, Country) -> Area.(Name,Country)

Road(_Road ID_, Point A Area, Point A Country,  Point B Area, Point B Country, Tax, Owner PersonNumber (nullable), Owner Country (nullable))
	(Point A Area, Point A Country)-> Area.(Name, Country)
	(Point B Area, Point B Country)-> Area.(Name, Country)
	(PersonNumber, Person Country)-> Person.(PersonNumber, Country)

Hotel(_City_, _Country_, Name, Price, _Owner PersonNumber_, _Owner Country_)
	(City, Country)-> Area.(Name, Country)
	(PersonNumber, Person Country)-> Person.(PersonNumber, Country)

Person(_PersonNumber_, Name, _Country_, Location Area, Location Country, Budget)
	Country -> Country.Name
 	(Location Area, Location Country)-> Area.(Name, Country)

Speaks(_Language_, _PersonNumber_, _Country_)
	Language -> Language.Name
	(PersonNumber, Country) -> Person.(PersonNumber, Country)
