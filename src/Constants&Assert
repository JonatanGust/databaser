CREATE TABLE Constants(
  name TEXT PRIMARY KEY,
  value NUMERIC NOT NULL
);

INSERT INTO Constants VALUES('roadprice', 456.9);
INSERT INTO Constants VALUES('hotelprice', 789.2);
INSERT INTO Constants VALUES('roadtax', 13.5);
INSERT INTO Constants VALUES('hotelrefund', 0.50);
INSERT INTO Constants VALUES('cityvisit', 102030.3);

CREATE OR REPLACE FUNCTION getval(qname TEXT) RETURNS NUMERIC AS $$
DECLARE
  xxx NUMERIC;
BEGIN
  xxx := (SELECT value FROM Constants WHERE name = qname);
  RETURN xxx;
END
$$ LANGUAGE 'plpgsql' ;



-- the assert function is for the unit tests
CREATE OR REPLACE FUNCTION assert(x numeric, y numeric) RETURNS void AS $$
BEGIN
  IF NOT (SELECT trunc(x, 2) = trunc(y, 2))
  THEN
    RAISE 'assert(%=%) failed (up to 2 decimal places, checked with trunc())!', x, y;
  END IF;
  RETURN;
END
$$ LANGUAGE 'plpgsql' ;

CREATE OR REPLACE FUNCTION assert(x text, y text) RETURNS void AS $$
BEGIN
  IF NOT (SELECT x = y)
  THEN
    RAISE 'assert(%=%) failed!', x, y;
  END IF;
  RETURN;
END
$$ LANGUAGE 'plpgsql' ;

